title: Vis FBP

NetworkView(template/handlebars)
NetworkViewUpdate(dom/setHtml)

BodyEl(dom/querySelector)
NetworkEl(dom/querySelector)

Network(vis/network)
Actor(core/actor)

NodeDataSet(vis/dataset)
EdgeDataSet(vis/dataset)

Log(console/log)

'./views/network.hb' ~> body NetworkView
{
  "title": "VIS FBP"
} -> vars NetworkView

"body"     -> selector BodyEl
"#network" -> selector NetworkEl

BodyEl selection -> element NetworkViewUpdate
NetworkEl selection -> container Network

'' -> :start Actor
# bit trickey node is a reference

# err ok, must rename also
#Actor addNode [id] -> [id] add DataSet
#Actor addNode [id] -> [label] add DataSet
EdgeModel(object/copy)
NodeModel(object/copy)
["source.pid","target.pid"] -> @from EdgeModel
["from","to"]               ->   @to EdgeModel

["pid","title","title"] -> @from NodeModel
["id","label","title"]  ->   @to NodeModel

# easiest is to make both nodes and ports connected.
# all ports are connected to the nodes.
# let's first just make the ports float everywhere.
# make the node a large circle and the ports smaller.
# then use a short edge length

{"fieldId": "pid"} -> @options NodeDataSet
{"fieldId": "pid"} -> @options EdgeDataSet
Actor addNode -> in NodeModel out -> add NodeDataSet
Actor addLink -> in EdgeModel out -> add EdgeDataSet

# weird out has output but EdgeDataSet never receives it.
# And EdgeDataSet gives output... hmzz.
NodeDataSet dataset -> msg Log
EdgeDataSet dataset -> msg Log

#Actor addNode -> msg Log

NodeDataSet dataset -> [nodes] data Network
EdgeDataSet dataset -> [edges] data Network

{} -> @options Network

NetworkView out          ->     html NetworkViewUpdate

NetworkViewUpdate element -> :start NetworkEl
#NetworkViewUpdate element -> :start Network
#NetworkEl selection     -> stream WebrtcHark
